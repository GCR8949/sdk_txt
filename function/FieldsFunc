package com.mingrun.sdk.function

import java.lang.Double
import java.text.SimpleDateFormat
import java.util.Date

/**
  * Created by GCR8949 on 2018/10/29.
  */
object FieldsFunc {
  val sdf = new SimpleDateFormat("yyyy/MM/dd")

  //  判断字段是否正确
  def fieldIsValidate(field: String): Boolean = {
    field != null && field.length != 0
  }

  //  将空字段改为UNKNOWN
  def fieldNull2Unknown(field: String): String = {
    if (fieldIsValidate(field)) field else "UNKNOWN"
  }

  //  针对某些字段存入数据库可能过长的情况
  def lengthCorrection(field: String, length: Int): String = {
    if (field.length > length) field.substring(0, length) else field
  }

  //  时间戳转时间，默认格式为yyyy/MM/dd
  def timestamp2Date(timestampe: String, sdf: SimpleDateFormat = this.sdf): String = {
    try {
      val date = new Date(timestampe.toLong)
      sdf.format(date)
    } catch {
      case e: Exception => "1970/01/01"
    }
  }

  //  经纬度转成平面坐标（墨卡托）
  def lngLat2XY(lng: Double, lat: Double): String = {
    var x = 0.0
    var y = 0.0
    x = lng * 20037508.34 / 180
    y = Math.log(Math.tan((90 + lat) * Math.PI / 360)) / (Math.PI / 180)
    y = y * 20037508.34 / 180
    x + ":" + y
  }

  //  根据不同size获取栅格编号
  def getXYID(lng: Double, lat: Double, gridSize: Int): String = {
    val splits = lngLat2XY(lng, lat).split(":")
    val dx = Double.parseDouble(splits(0))
    val dy = Double.parseDouble(splits(1))

    val gridX = Math.floor(dx / gridSize).toInt
    val gridY = Math.floor(dy / gridSize).toInt

    gridX + "_" + gridY
  }

  //  根据从日志中字符串格式的经纬度，来获取其中的值，如非法，则返回0.0
  def lngLatStr2Double(lngLatStr: String): Double = {
    try {
      Double.parseDouble(lngLatStr)
    } catch {
      case e: Exception => 0.0
    }
  }

  //  根据从日志中字符串格式的rsrp和sinr，来获取其中的值，如非法，则返回1000
  def rsrpSinrStr2Int(rsrpSinrStr: String): Int = {
    try {
      Integer.parseInt(rsrpSinrStr)
    } catch {
      case e: Exception => 1000
    }
  }


}
